(function(thisObj) {

/*! cross-reference.jsx - v0.1.0 - 2015-01-18 */
/* * cross-reference * https://github.com/fabiantheblind/emb-scripts * * Copyright (c) 2015 fabiantheblind * Licensed under the MIT license. */#target "indesign-10" // jshint ignore:linevar DEBUG = true;var settings = {  "rewirte": false,  "source": {    "fcquery": "emb-source-test",    "mode": SearchModes.grepSearch,    "findGrepPreferences": {      "findWhat": "Hello World"    }    // "changeGrepPreferences": {    //   "changeTo": "Hello InDesign-10!"    // },  },  "target": {    "fcquery": "emb-target-test",    "mode": SearchModes.grepSearch,    "findGrepPreferences": {      "findWhat": "target"    }    // "changeGrepPreferences": {    //   "changeTo": "Hello InDesign"    // },  }};var reset = function() {  // now empty the find what field!!!thats important!!!  app.findGrepPreferences = NothingEnum.nothing;  // empts the change to field!!!thats important!!!  app.changeGrepPreferences = NothingEnum.nothing;};var trainer = function(obj) {  try {    app.loadFindChangeQuery(obj.fcquery, obj.mode);    var passed = true;    if (DEBUG) $.writeln("passed training. Query exists");    if (settings.rewirte === true) {      if (DEBUG) $.writeln("rewriting query");      // thanks peter kahrel for that path      // http://www.kahrel.plus.com/indesign/grep_query_manager.html      var queryFolder = app.scriptPreferences.scriptsFolder.parent.parent.fsName + "/Find-Change Queries/Grep/";      File(queryFolder + "/" + obj.fcquery + ".xml").remove();      reset();      //-----------      app.findGrepPreferences = obj.findGrepPreferences;      // app.changeGrepPreferences = obj.changeGrepPreferences;      app.saveFindChangeQuery(obj.fcquery, obj.mode);    }    // if (passed) return;  } catch (e) {    if (DEBUG) $.writeln("could not find query");    // setup fc here    reset();    //-----------    app.findGrepPreferences.findWhat = obj.findGrepPreferences.findWhat;    // app.findGrepPreferences = obj.findGrepPreferences;    // app.changeGrepPreferences = obj.changeGrepPreferences;    app.saveFindChangeQuery(obj.fcquery, obj.mode);    if (DEBUG) $.writeln("query created");  }};var runner = function(d) {  reset();  app.loadFindChangeQuery(settings.source.fcquery, settings.source.mode);  var sources = d.findGrep();  app.loadFindChangeQuery(settings.target.fcquery, settings.target.mode);  var targets = d.findGrep();  var report = "Sources:\n";  for (var i = 0; i < sources.length; i++) {    report += sources[i].contents;  }  report += "\nTargets:\n";  for (var j = 0; j < targets.length; j++) {    report += targets[j].contents;  }  if (DEBUG) $.writeln("\n-----\n" + report);  return report;};var main = function() {  trainer(settings.source);  trainer(settings.target);  if (app.documents.length > 0) {    var res = runner(app.activeDocument);    if (DEBUG) {      alert("Done\n" + res);      $.writeln(res);    }  }};main();
})(this);
